name: release2
# This workflow is triggered when publishing a new GitHub release

on: 
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"
          server-id: github

      - name: Setup maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.6.3

      - name: configure-git-user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: get-pom-version
        id: pom-version
        run: |
          echo "JAVA_POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"

      - name: print-pom-version    
        run: echo "JAVA_POM_VERSION=${{ steps.pom-version.outputs.JAVA_POM_VERSION }}"

      - name: check-artifact-exist
        id: check_artifact_exist
        uses: LIT-Protocol/artifact-exists-action@v0
        with:
          name: "com.opentelekomcloud:opentelekomcloud-functiongraph-java:pom:${{ steps.pom-version.outputs.JAVA_POM_VERSION }}"

      - name: echo-if-artifact-exists"
        if: "${{ steps.check_artifact_exist.outputs.exists == 'true' }}"
        run: echo "::notice::Artifact exsits, skipping upload."

      - name: deploy-artifacts-to-github
        if: "${{ steps.check_artifact_exist.outputs.exists != 'true' }}"
        id: deploy_github
        run: | 
          mvn -B deploy --file pom.xml \
            -DaltDeploymentRepository="github::https://maven.pkg.github.com/${{ github.repository }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
      # https://github.com/ncipollo/release-action/blob/main/.github/workflows/release.yml
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: false
          generateReleaseNotes: true
