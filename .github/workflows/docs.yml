    name: Build documentation

    on:
        pull_request:
            branches:
                - main
                - initial

    jobs:
        doc-check:
            runs-on: ubuntu-latest

            steps:
                - name: Checkout code
                  uses: actions/checkout@v3

                - name: Set up Python
                  uses: actions/setup-python@v3
                  with:
                      python-version: '3.12'

                - name: Install dependencies
                  run: |
                      python -m pip install --upgrade pip
                      pip install tox

                - name: Run Tox for Documentation
                  env:
                      GH_ACTIONS_GIT_BRANCH: ${{ github.head_ref || github.ref_name }}
                  run: tox -e docs
                
                - name: Upload artifacts to OBS
                  env:
                      AWS_ACCESS_KEY_ID: ${{ secrets.OTC_ACCESS_KEY_ID }}
                      AWS_SECRET_ACCESS_KEY: ${{ secrets.OTC_SECRET_ACCESS_KEY }}
                      AWS_DEFAULT_REGION: eu-de
                  run: |
                      pip install awscli
                      aws configure set default.s3.signature_version s3v4
                      export TARGET_PATH=s3://helpcenter-docs/opentelekomcloud-functiongraph-java/${{ github.head_ref || github.ref_name }}/
                      export ENDPOINT_URL=https://obs.eu-de.otc.t-systems.com
                      aws s3 rm "$TARGET_PATH" --recursive --endpoint-url "$ENDPOINT_URL"
                      aws s3 sync doc/build/html "$TARGET_PATH" \
                        --endpoint-url "$ENDPOINT_URL" \
                        --delete \
                        --exact-timestamps

                      find doc/build/html -type f \( -name "*.woff2" -o -name "*.woff" -o -name "*.ttf" \) | while read file; do
                          rel_path=${file#doc/build/html/}
                          case "$file" in
                              *.woff2) mime="font/woff2" ;;
                              *.woff)  mime="font/woff" ;;
                              *.ttf)   mime="font/ttf" ;;
                              *)       mime="application/octet-stream" ;;
                          esac
                          echo "Re-uploading $rel_path with MIME type $mime"
                          aws s3 cp "$file" "$TARGET_PATH$rel_path" \
                            --endpoint-url "$ENDPOINT_URL" \
                            --content-type "$mime"
                      done

                
